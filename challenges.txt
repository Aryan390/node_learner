challenges to implement:

implement restriction that users can only review a tour that they have actually booked

implement nested booking routes: /tours/:id/bookings and /users/:id/bookings

improve tour dates: add a participants and a soldOut field to each date. A date then becomes like an instance of the tour. Then, when a user books, they need to select one of the dates. A new booking will increase the n umber of participants in the date, until it is booked out (participants > maxGroupSize). So, when a user wants to book, you need to check if tour on the selected date is still available.

implement advanced authentication features: confirm user email, keep users logged in with refresh tokens, two-factor authentication, etc.

implement a sign up form, similar to login form

On the tour detail page, if a user has taken a tour, allow them add a review directly on the website. implement a form for this;

hide the entire booking section on the tour detail page if current user has already booked the tour(also prevent duplicate bookings on the model) preventing them from booking the tour twice

implement "like tour" functionality, with favourite tour page;

add reviews page and letting the user perform crud operations on the reviews

for administrators, implement all the "Manage" pages, where they can crud tours, users, reviews, and bookings